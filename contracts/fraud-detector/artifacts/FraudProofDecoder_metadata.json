{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_paychanContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_depositContract",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "ECDSAInvalidSignature",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "length",
						"type": "uint256"
					}
				],
				"name": "ECDSAInvalidSignatureLength",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "ECDSAInvalidSignatureS",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"name": "LogBool",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes[]",
						"name": "Proof",
						"type": "bytes[]"
					}
				],
				"name": "emitProof",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes",
								"name": "key",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "value",
								"type": "bytes"
							}
						],
						"indexed": false,
						"internalType": "struct StorageValue[]",
						"name": "proofReturnValues",
						"type": "tuple[]"
					}
				],
				"name": "emitProofValues",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "msgHash",
						"type": "bytes32"
					}
				],
				"name": "msgHash",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "res",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "req",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "blockHeaderInfo",
						"type": "bytes"
					},
					{
						"internalType": "address",
						"name": "witness",
						"type": "address"
					}
				],
				"name": "decodeAllSP",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositContract",
				"outputs": [
					{
						"internalType": "contract IDepositContract",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paychanContract",
				"outputs": [
					{
						"internalType": "contract IPaychan",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "root",
						"type": "bytes32"
					},
					{
						"internalType": "bytes[]",
						"name": "proof",
						"type": "bytes[]"
					},
					{
						"internalType": "bytes[]",
						"name": "keys",
						"type": "bytes[]"
					}
				],
				"name": "verifyProof",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"errors": {
				"ECDSAInvalidSignature()": [
					{
						"details": "The signature derives the `address(0)`."
					}
				],
				"ECDSAInvalidSignatureLength(uint256)": [
					{
						"details": "The signature has an invalid length."
					}
				],
				"ECDSAInvalidSignatureS(bytes32)": [
					{
						"details": "The signature has an S value that is in the upper half order."
					}
				]
			},
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/fraud-detector/FraudProofDetector.sol": "FraudProofDecoder"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [],
		"viaIR": true
	},
	"sources": {
		"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
			"keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
			"license": "MIT",
			"urls": [
				"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
				"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
			]
		},
		"contracts/fraud-detector/FraudProofBase.sol": {
			"keccak256": "0xf5fdf57dc1d596e7741302d5b8a8a884fb1d9555d692d333206389b65c16ee07",
			"license": "Apache2",
			"urls": [
				"bzz-raw://1775980196616cc0c602e6d23b202bc932e8314247962f800524f38f54cd657d",
				"dweb:/ipfs/QmZCCGXkNmCNYBgekgRXNMLv4y66VALREmiPMvQvcfSnch"
			]
		},
		"contracts/fraud-detector/FraudProofDetector.sol": {
			"keccak256": "0xe635a1cdef590f18c31dde812c6c438972d7f5d6cc9cd62db6a8adccbb311d83",
			"license": "MIT",
			"urls": [
				"bzz-raw://0a8068a9dffcc01676a62b0192be97783a7cd952d749731fbe7400653751aff4",
				"dweb:/ipfs/QmU8scGMDGT3kuSRPHzjaaB9AiZ5C5omCXihKsJrHtAZSN"
			]
		},
		"contracts/fraud-detector/FraudProofSPProcessor.sol": {
			"keccak256": "0x157ba59b54ad488b258041ebc2794f78adaa96092fae2ab0483be308081da13b",
			"license": "MIT",
			"urls": [
				"bzz-raw://21906873cd3a14722390a7360e7034f5901cb31f56048519da9c06eb6896adb0",
				"dweb:/ipfs/QmdLjZPd68mjciW5JZBXRSqGHMAMLTjELPcvu2tF1JTFjD"
			]
		},
		"contracts/fraud-detector/FraudProofTxProcessor.sol": {
			"keccak256": "0xd3f025ea007e618f60dd5c4df74a5ffe21541c1aa0ccd5d25b9520bbbad52b26",
			"license": "MIT",
			"urls": [
				"bzz-raw://ebd997774ba5934881e74ec179df45ebad3fb35d06080b90eb03145ad87eb8c4",
				"dweb:/ipfs/QmRJrXtELUacd5TVDV1stGwkUWncA1iXGdeoHsuAe54GFe"
			]
		},
		"contracts/fraud-detector/interfaces/IDeposit.sol": {
			"keccak256": "0x9991601cbe787a8b85c5d6ce0eb3146854765f70179079235e4efa072e09ff69",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://bf676f505371cc4ae9ee218ceed33a4d980cb8e1bcdb94cba3e240e70d5bbc6a",
				"dweb:/ipfs/QmQ2j2vTdVwbUkgie3KB4U3b8haae5vSxxCivNaSQex3No"
			]
		},
		"contracts/fraud-detector/interfaces/IPayChan.sol": {
			"keccak256": "0x8c3e70f44c7c43fa8382d011c4f0ddb65afec3230772bb6c8c8313e1462c32ae",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://ad98c245fe92ba3662c58db592590b3b0f3a6b44f732e3daae1145b65353caa5",
				"dweb:/ipfs/QmZJawZNV7o5Y1MAz55R85Cvk4At58x2UhdY5tjsQMBhGg"
			]
		},
		"contracts/fraud-detector/libs/ProofHelper.sol": {
			"keccak256": "0x35e6ee26eaf238594dfa75380658e7cd2faa98158617b79f1001b2baad34040a",
			"license": "Apache2",
			"urls": [
				"bzz-raw://456b93a3301a71378c95895a7fa617ba3eb89fb43f4d525bffb12017ca7e7741",
				"dweb:/ipfs/QmcmMCd71Sv3oCeCGVpPBsbzydryqqKGsL3eY6AZCnzced"
			]
		},
		"contracts/fraud-detector/libs/decode/msgDecoding.sol": {
			"keccak256": "0x5f50a2f71c5a860ed29bb3749332371ad5a2ee6cf61a7eb920b81177a592ed71",
			"license": "Apache2",
			"urls": [
				"bzz-raw://91576cc5ed4e8281acca50eff86059909a91b37a97f433b6801a1071e6957ad8",
				"dweb:/ipfs/QmVvyTj6LLSjJfZRKWG5nfoEqtBpxVmyL97Eb2n917ApaE"
			]
		},
		"contracts/fraud-detector/libs/merkleverify.sol": {
			"keccak256": "0xb0fc5351379fa692a283f21af6a7c213d96addd114ee36ca5daa65a2284204b8",
			"license": "Apache2",
			"urls": [
				"bzz-raw://c4f0f9602003b0e49072bd9261635bf95234d298bec972b20db6b24f6b65d051",
				"dweb:/ipfs/QmPFZwum1K1CxoXjDN9bB9fpEmXQMA6uAaDQWht8RrShen"
			]
		},
		"contracts/fraud-detector/libs/rlp/Helper.sol": {
			"keccak256": "0xa5fc576de328eb9bc5920a970fc3507415fc4a87fd0e21f5175010b78d638163",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://3ca563e3be397a6a18db9cffe638716070195c0ccdbf8bfee685cc422fd07d99",
				"dweb:/ipfs/QmVcgkJHCw8RMJA3rzRMy1DoGSR7cXmNYa75i1VQpKpVd2"
			]
		},
		"contracts/fraud-detector/libs/rlp/RLPEncoder.sol": {
			"keccak256": "0xadc6cbd649f5891cf09a12e67cb77b9c40b24954c8168e8fe4c51025f0d92f49",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://9f50a7bd139f20975c034e2001ffa9d969fffdafac730ed86723a4238e086b1f",
				"dweb:/ipfs/QmSTmrbT3BvmkERpP3sVSTXGdVRGnWPoPKhRGav5mBspWr"
			]
		},
		"contracts/fraud-detector/libs/rlp/RLPReader.sol": {
			"keccak256": "0x77646c5ec25d5d9e83c7a28035f4574a4e4380e949a65b72cd0455e36136a306",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://3ecc9d16d221ce60cc42fa538b029b7c7410917bfe6999f37dcb2c9f9ba9d6fc",
				"dweb:/ipfs/QmWkvHrioX3NiY7bKCtDnhAGRSJnBz6yBuhTrR5BEWrGhR"
			]
		},
		"contracts/fraud-detector/libs/trie/Bytes.sol": {
			"keccak256": "0xd5624a311cb0cc5fd5df7e87715a6bde1ea57c9596fcfe1e79992f320bc2b33c",
			"license": "Apache2",
			"urls": [
				"bzz-raw://553877386f37d2a5d31640d875bcbb21ad557bcf0bd4fbb886ee4c7dc23415cf",
				"dweb:/ipfs/QmSamHweTX1osbjEHy9Vtz3cyyvJCXAiHEVbv8JF6AZ2bg"
			]
		},
		"contracts/fraud-detector/libs/trie/EthereumTrieDB.sol": {
			"keccak256": "0x9ff79c2642df909bb88a3b45a0651569071ca899c50e315778587b9ae270b485",
			"license": "Apache2",
			"urls": [
				"bzz-raw://66fb4d8fd591c60bce54e3183b9ea6fb26d6120cac26df8f120c5e18305dfc00",
				"dweb:/ipfs/QmcSiXjPNrzh5zJKo53YqZ2KMHtyoFYUuJMdDpJ7j971tE"
			]
		},
		"contracts/fraud-detector/libs/trie/Memory.sol": {
			"keccak256": "0x31877187eab669aa48e4eeb58a521d2b4f526a0cd6c16c9d3d819b6aa87b759b",
			"license": "Apache2",
			"urls": [
				"bzz-raw://925b76249c53b7b3a361867e95194914be3e105b0f8e517f0a2828e3ae57bb32",
				"dweb:/ipfs/QmYvJ5mtNfLeJNsobxBazRPoMes49abxv5Umvdr1MK5ZPx"
			]
		},
		"contracts/fraud-detector/libs/trie/NibbleSlice.sol": {
			"keccak256": "0x06cb709d27758d228fefb0fd4f72e7824190723c0a5bef9c61bf33c37896e6e6",
			"license": "Apache2",
			"urls": [
				"bzz-raw://7c2860ceaa751f51952085cfc797d7b0980ccd36e43ff771a7cee45621cc8ede",
				"dweb:/ipfs/QmekfeoJD56Nx5nNwdpDsRfCoggagq6y3pT2YA9CMt2Zsi"
			]
		},
		"contracts/fraud-detector/libs/trie/Node.sol": {
			"keccak256": "0x38fd986e9d7f98a54adee7c890f161666281d95d69e0ba30e9e4de315704bc37",
			"license": "Apache2",
			"urls": [
				"bzz-raw://7d0111c0a68e415d316d050c1043bbd2e11e6f3d9e1ec584b4cb8dfc82168a3d",
				"dweb:/ipfs/QmT3C5nEwcVHxTqnWKAwfCXvUgUQiCLXrhWnzv3hxXz3wq"
			]
		},
		"contracts/fraud-detector/libs/trie/Option.sol": {
			"keccak256": "0xb629529d39b1c80cf0f8f8e0ce1154a1069c45f03d1aff0e8ee4572518b94335",
			"license": "Apache2",
			"urls": [
				"bzz-raw://3c1843ae0658aca8c393b25e290f03a108ee8f300cac97f4318053eec6c0035e",
				"dweb:/ipfs/QmXwYNK6XvaQSMrKSLMTNtsRkuiyG7VEVoH5miUysveqox"
			]
		},
		"contracts/fraud-detector/libs/trie/RLPReader.sol": {
			"keccak256": "0x1fa57b232e586b2d8255a52902bf492d70274a1755a11866f3cb855ad032bd42",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://f06e4d138aa1d6eaf955a3600a9eab54011b799cdba2c6e999de1b9a912f6f59",
				"dweb:/ipfs/QmTYrcvEAtcJ3DVPMN7UWvtunwFefndscTbjT3z1yD3YG3"
			]
		},
		"contracts/fraud-detector/libs/trie/TrieDB.sol": {
			"keccak256": "0xfdee85a8e1c4b9ed857c4c794a0d90ce82764dfb59461f412af58bb951be5afa",
			"license": "Apache2",
			"urls": [
				"bzz-raw://6664ce9386bcd714a9e3ed4b185a952b8481cb0a2466ebd2879e58701874f82b",
				"dweb:/ipfs/QmVXyG72SjuyitKiHGPBHhkyTeEw6g17YyyQWAMvDPD6wx"
			]
		},
		"contracts/fraud-detector/newHeader.sol": {
			"keccak256": "0xfcd78d5091632885863580e4dc5d44dcd0c5b5bbea37ef98fb9be15fa8d9652d",
			"license": "MIT",
			"urls": [
				"bzz-raw://8040c81a3a7c06375e008dcc36b04fcc8bb30009c6388c2997b099141d4ea546",
				"dweb:/ipfs/QmdKVKPSkbVFJ4e94kNKBQMBFnmg8yBFwjdETqpYgLmXvy"
			]
		},
		"contracts/fraud-detector/types/channel.sol": {
			"keccak256": "0x712ba4f33de002c887dcf4ccb54d59a11fa6798f44e2dbf95914c954e0f7817b",
			"license": "MIT",
			"urls": [
				"bzz-raw://c4fcf5ca2193a2c503b6ab62e7e142c5ccf9e8603c6120d30ac00c8ec6c34be1",
				"dweb:/ipfs/QmNuQxsFhfSXbzxDGzFwKqZiCeVmNjxw7SFrR2Xqdwy9EP"
			]
		},
		"contracts/fraud-detector/types/events.sol": {
			"keccak256": "0x873bfbac51bd9813a35077c8646d027526a4d8ba5d8cf802896f5bf5bbef4b37",
			"license": "MIT",
			"urls": [
				"bzz-raw://dc372e370d630dee69b23f01a308c95e9fcda232faa681dfa8f5d9bc1f61d100",
				"dweb:/ipfs/QmcGcKuBnaZycEoErhTgEEg97dJSNkwvwQND7uhhV99vmR"
			]
		},
		"contracts/fraud-detector/types/message.sol": {
			"keccak256": "0x09140b4a5c4aee43a96f6de7d6f8892e7f45a6bb6131d5eee2a2df70744d10a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://635d92fb7505a9e9e7647736203e2d4b4abe130eb1bb12e4b084bb7174b2777f",
				"dweb:/ipfs/QmUL9ZnHVvJGob14NycTyhjYkPp99vtv9t8g6wuegWSGDF"
			]
		},
		"contracts/fraud-detector/types/proof.sol": {
			"keccak256": "0xc2b579dacc74e7de2b3ecf386287f3cecfcbd0d8ada14e14c4758ee610017924",
			"license": "Apache2",
			"urls": [
				"bzz-raw://8adb5b14e475f739ffe2f3e7d19f2ea0d99e19887d9eca777d047258cc8b5041",
				"dweb:/ipfs/QmUMwX9xbBrrhj8TvJ6eMNztWWPiEgL3idoK7ENLdn8iZ8"
			]
		}
	},
	"version": 1
}